import axios from 'axios';

const API_BASE_URL = 'http://localhost:3000/api';
const API_KEY = 'mySuperSecretKey';

const headers = {
    'Content-Type': 'application/json',
    'x-api-key': API_KEY
};

// Exemple de donn√©es de r√©servation taxi compl√®tes
const taxiBookingData = {
    senderId: 'taxi-app-instance',
    recipients: ['+212633030117'], // Num√©ro du client
    bookingData: {
        transactionId: 'TXN-2025-001234',
        pickup: {
            address: 'A√©roport Mohammed V, Casablanca'
        },
        destination: {
            address: 'H√¥tel Hyatt Regency, Casablanca'
        },
        price: 180,
        originalPrice: 220,
        couponCode: 'WELCOME20',
        discount: 40,
        driver: {
            firstName: 'Ahmed',
            lastName: 'Benali',
            phone: '+212661234567',
            vehicleType: 'Mercedes Classe E'
        },
        passengers: 2,
        luggage: 3,
        specialOffer: 'Premi√®re course gratuite pour les nouveaux clients!',
        emergencyNumber: '+212522123456',
        estimatedTime: '35 minutes',
        bookingTime: new Date().toLocaleString('fr-FR')
    }
};

// Exemple avec donn√©es minimales
const minimalBookingData = {
    senderId: 'taxi-app-instance',
    recipients: ['+212621323085'],
    bookingData: {
        transactionId: 'TXN-2025-001235',
        pickup: 'Gare Casa-Port',
        destination: 'Marina Shopping Center',
        price: 45,
        driver: {
            firstName: 'Youssef',
            lastName: 'Alami',
            phone: '+212667890123'
        },
        emergencyNumber: '+212522123456'
    }
};

async function testTaxiBookingConfirmation() {
    try {
        console.log('üöñ Testing Taxi Booking Confirmation...');
        console.log('üì± Recipient:', taxiBookingData.recipients[0]);
        console.log('üÜî Transaction ID:', taxiBookingData.bookingData.transactionId);
        console.log('üí∞ Price:', taxiBookingData.bookingData.price + '‚Ç¨');
        
        const response = await axios.post(
            `${API_BASE_URL}/whatsapp/taxi/booking-confirmation`,
            taxiBookingData,
            { headers }
        );
        
        console.log('‚úÖ Taxi booking confirmation sent successfully!');
        console.log('üìã Response:', response.data);
        console.log('');
        
    } catch (error) {
        console.error('‚ùå Error sending taxi booking confirmation:', error.response?.data || error.message);
    }
}

async function testMinimalBookingConfirmation() {
    try {
        console.log('üöñ Testing Minimal Taxi Booking Confirmation...');
        console.log('üì± Recipient:', minimalBookingData.recipients[0]);
        console.log('üÜî Transaction ID:', minimalBookingData.bookingData.transactionId);
        
        const response = await axios.post(
            `${API_BASE_URL}/whatsapp/taxi/booking-confirmation`,
            minimalBookingData,
            { headers }
        );
        
        console.log('‚úÖ Minimal booking confirmation sent successfully!');
        console.log('üìã Response:', response.data);
        console.log('');
        
    } catch (error) {
        console.error('‚ùå Error sending minimal booking confirmation:', error.response?.data || error.message);
    }
}

async function runTaxiTests() {
    console.log('üöÄ Starting Taxi Booking API Tests...\n');
    
    // Test avec donn√©es compl√®tes
    await testTaxiBookingConfirmation();
    
    // Test avec donn√©es minimales
    await testMinimalBookingConfirmation();
    
    console.log('üèÅ Taxi booking tests completed!');
}

// Ex√©cuter les tests
runTaxiTests().catch(console.error);

// Export pour utilisation dans d'autres fichiers
export { taxiBookingData, minimalBookingData };